'Lithium concentration in SWN by SPSA: ', round(mean(LithiumSPSA2[1:3]), 0),
' +/- ', round(1.96 * sd(LithiumSPSA2[1:3]), 0), ' ug/kg'))
# Data in SPSA1 is not trustable due to instrumental noise
cat(paste0('Lithium concentration in SWN by ESCC: ', round(mean(LithiumESCC[1:3]), 0),
' +/- ', round(1.96 * sd(LithiumESCC[1:3]), 0), ' ug/kg \n\n',
'Lithium concentration in SWN by SPSA: ', round(mean(LithiumSPSA2[1:3]), 0),
' +/- ', round(1.96 * sd(LithiumSPSA2[1:3]), 0), ' ug/kg'))
# Data in SPSA1 is not trustable due to instrumental noise
cat(paste0('Lithium concentration in SWN by ESCC: ', round(mean(LithiumESCC[1:3]), 0),
' +/- ', round(1.96 * sd(LithiumESCC[1:3]), 0), ' ug/kg \n',
'Lithium concentration in SWN by SPSA: ', round(mean(LithiumSPSA2[1:3]), 0),
' +/- ', round(1.96 * sd(LithiumSPSA2[1:3]), 0), ' ug/kg \n\n',
'Lithium concentration in SWS by ESCC: ', round(mean(LithiumESCC[4:6]), 0),
' +/- ', round(1.96 * sd(LithiumESCC[4:6]), 0), ' ug/kg \n',
'Lithium concentration in SWS by SPSA: ', round(mean(LithiumSPSA2[4:6]), 0),
' +/- ', round(1.96 * sd(LithiumSPSA2[4:6]), 0), ' ug/kg'))
# Data in SPSA1 is not trustable due to instrumental noise
SodiumESCC <- signal2conc(signal = c(0.834, 0.831), model = CalModels$Sodium, dilution = c(SWN.dil.2000, SWS.dil.2000))
SodiumESCC
PotasiumESCC <- signal2conc(signal = c(0.456, 0.092, 0.454, 0.096), model = CalModels$Potassium,
dilution = c(SWN.dil.400, SWN.dil.2000, SWS.dil.400, SWS.dil.2000))
PotasiumESCC
MagnesiumESCC <- signal2conc(signal = c(0.240, 0.239), model = CalModels$Magnesium,
dilution = c(SWN.dil.2000, SWS.dil.2000))
cat(paste0('Lithium concentration in SWN by ESCC: ', round(mean(LithiumESCC[1:3]), 0),
' +/- ', round(sd(LithiumESCC[1:3]), 0), ' ug/kg \n',
'Lithium concentration in SWN by SPSA: ', round(mean(LithiumSPSA2[1:3]), 0),
' +/- ', round(sd(LithiumSPSA2[1:3]), 0), ' ug/kg \n\n',
'Lithium concentration in SWS by ESCC: ', round(mean(LithiumESCC[4:6]), 0),
' +/- ', round(sd(LithiumESCC[4:6]), 0), ' ug/kg \n',
'Lithium concentration in SWS by SPSA: ', round(mean(LithiumSPSA2[4:6]), 0),
' +/- ', round(sd(LithiumSPSA2[4:6]), 0), ' ug/kg \n\n',
'Sodium concentration in SWN by ESCC: ', round(SodiumESCC[1], 0), ' mg/kg \n',
'Sodium concentration in SWS by ESCC: ', round(SodiumESCC[2], 0), ' mg/kg \n',
'Potassium concentration in SWN by ESCC: ', round(mean(PotassiumESCC[1:2]), 0),
' +/- ', round(sd(PotassiumESCC[1:2]), 0), ' mg/kg \n',
'Potassium concentration in SWS by ESCC: ', round(mean(PotassiumESCC[3:4]), 0),
' +/- ', round(sd(PotassiumESCC[3:4]), 0), ' mg/kg \n',
'Magnesium concentration in SWN by ESCC: ', round(MagnesiumESCC[1], 0), ' mg/kg \n',
'Magnesium concentration in SWS by ESCC: ', round(MagnesiumESCC[2], 0), ' mg/kg \n',
'Calcium concentration in SWN by ESCC: ', round(mean(CalciumESCC[1:2]), 0),
' +/- ', round(sd(CalciumESCC[1:2]), 0), ' mg/kg \n',
'Calcium concentration in SWS by ESCC: ', round(mean(CalciumESCC[3:4]), 0),
' +/- ', round(sd(CalciumESCC[3:4]), 0), ' mg/kg \n'))
LithiumSPSA1 <- (SPSA.Em01 * StockLi.500u * (SpikeMass/FinalMass)) / (SPSA.Em1 - SPSA.Em01 * (InitiMass / FinalMass))
LithiumSPSA2 <- (SPSA.Em02 * StockLi.500u * (SpikeMass/FinalMass)) / (SPSA.Em2 - SPSA.Em02 * (InitiMass / FinalMass))
# Data in SPSA1 is not trustable due to instrumental noise
SodiumESCC    <- signal2conc(signal = c(0.834, 0.831), model = CalModels$Sodium,
dilution = c(SWN.dil.2000, SWS.dil.2000))
PotassiumESCC <- signal2conc(signal = c(0.456, 0.092, 0.454, 0.096), model = CalModels$Potassium,
dilution = c(SWN.dil.400, SWN.dil.2000, SWS.dil.400, SWS.dil.2000))
MagnesiumESCC <- signal2conc(signal = c(0.240, 0.239), model = CalModels$Magnesium,
dilution = c(SWN.dil.2000, SWS.dil.2000))
CalciumESCC   <- signal2conc(signal = c(0.225, 0.059, 0.225, 0.057), model = CalModels$Calcium,
dilution = c(SWN.dil.100, SWN.dil.400, SWS.dil.100, SWS.dil.400))
cat(paste0('Lithium concentration in SWN by ESCC: ', round(mean(LithiumESCC[1:3]), 0),
' +/- ', round(sd(LithiumESCC[1:3]), 0), ' ug/kg \n',
'Lithium concentration in SWN by SPSA: ', round(mean(LithiumSPSA2[1:3]), 0),
' +/- ', round(sd(LithiumSPSA2[1:3]), 0), ' ug/kg \n\n',
'Lithium concentration in SWS by ESCC: ', round(mean(LithiumESCC[4:6]), 0),
' +/- ', round(sd(LithiumESCC[4:6]), 0), ' ug/kg \n',
'Lithium concentration in SWS by SPSA: ', round(mean(LithiumSPSA2[4:6]), 0),
' +/- ', round(sd(LithiumSPSA2[4:6]), 0), ' ug/kg \n\n',
'Sodium concentration in SWN by ESCC: ', round(SodiumESCC[1], 0), ' mg/kg \n',
'Sodium concentration in SWS by ESCC: ', round(SodiumESCC[2], 0), ' mg/kg \n',
'Potassium concentration in SWN by ESCC: ', round(mean(PotassiumESCC[1:2]), 0),
' +/- ', round(sd(PotassiumESCC[1:2]), 0), ' mg/kg \n',
'Potassium concentration in SWS by ESCC: ', round(mean(PotassiumESCC[3:4]), 0),
' +/- ', round(sd(PotassiumESCC[3:4]), 0), ' mg/kg \n',
'Magnesium concentration in SWN by ESCC: ', round(MagnesiumESCC[1], 0), ' mg/kg \n',
'Magnesium concentration in SWS by ESCC: ', round(MagnesiumESCC[2], 0), ' mg/kg \n',
'Calcium concentration in SWN by ESCC: ', round(mean(CalciumESCC[1:2]), 0),
' +/- ', round(sd(CalciumESCC[1:2]), 0), ' mg/kg \n',
'Calcium concentration in SWS by ESCC: ', round(mean(CalciumESCC[3:4]), 0),
' +/- ', round(sd(CalciumESCC[3:4]), 0), ' mg/kg \n'))
cat(paste0('Lithium concentration in SWN by ESCC: ', round(mean(LithiumESCC[1:3]), 0),
' +/- ', round(sd(LithiumESCC[1:3]), 0), ' ug/kg \n',
'Lithium concentration in SWN by SPSA: ', round(mean(LithiumSPSA2[1:3]), 0),
' +/- ', round(sd(LithiumSPSA2[1:3]), 0), ' ug/kg \n',
'Lithium concentration in SWS by ESCC: ', round(mean(LithiumESCC[4:6]), 0),
' +/- ', round(sd(LithiumESCC[4:6]), 0), ' ug/kg \n',
'Lithium concentration in SWS by SPSA: ', round(mean(LithiumSPSA2[4:6]), 0),
' +/- ', round(sd(LithiumSPSA2[4:6]), 0), ' ug/kg \n\n',
'Sodium concentration in SWN by ESCC: ', round(SodiumESCC[1], 0), ' mg/kg \n',
'Sodium concentration in SWS by ESCC: ', round(SodiumESCC[2], 0), ' mg/kg \n\n',
'Potassium concentration in SWN by ESCC: ', round(mean(PotassiumESCC[1:2]), 0),
' +/- ', round(sd(PotassiumESCC[1:2]), 0), ' mg/kg \n',
'Potassium concentration in SWS by ESCC: ', round(mean(PotassiumESCC[3:4]), 0),
' +/- ', round(sd(PotassiumESCC[3:4]), 0), ' mg/kg \n\n',
'Magnesium concentration in SWN by ESCC: ', round(MagnesiumESCC[1], 0), ' mg/kg \n',
'Magnesium concentration in SWS by ESCC: ', round(MagnesiumESCC[2], 0), ' mg/kg \n\n',
'Calcium concentration in SWN by ESCC: ', round(mean(CalciumESCC[1:2]), 0),
' +/- ', round(sd(CalciumESCC[1:2]), 0), ' mg/kg \n',
'Calcium concentration in SWS by ESCC: ', round(mean(CalciumESCC[3:4]), 0),
' +/- ', round(sd(CalciumESCC[3:4]), 0), ' mg/kg \n'))
6*40*.1
mean((c(109.9, 322.5) / 204.22 / c(0.9991, 2.9751))*12.9418/1.2828)
c(109.9, 322.5) / 204.22 / c(0.9991, 2.9751)
c(109.9, 322.5) / 204.22
100 / 204 / 0.15
c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)
mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114))
sd(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114))
mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493 / 0.7063
mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493 * (0.7063^-1)
(mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493)^-1 * 0.7063
mean(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694))
sd(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694))
c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694)
mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493 / 0.7063
mean(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694)) * 0.0993329 / 0.7958
39.997^-1
mean(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694)) * 0.0993329 / 0.7958)
mean(c(mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493 / 0.7063,
mean(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694)) * 0.0993329 / 0.7958))
sd(c(mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493 / 0.7063,
mean(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694)) * 0.0993329 / 0.7958))
.15/NaOHSolid
# 20 de Enero de 2020
NaOHSolid <- mean(c(mean(c(131.1, 212.6) / 204.22 / c(4.2976, 6.8114)) * 0.0989493 / 0.7063,
mean(c(105.3, 120.3) / 204.22 / c(2.9526, 3.3694)) * 0.0993329 / 0.7958)) # mol g^-1
.15/NaOHSolid
library(transmem)
library(ggplot2)
PDF <- FALSE
if (PDF) pdf("SWS-29-01-19.pdf", height = 7/1.3, width = 9/1.3)
#-----STOCK SOLUTIONS--Prepared January 18th, 2020---------------------------
StockLi.622  <- 100.4 * 0.18787 * 0.990 / 0.0300314
StockNa.6627 <- 508.4 * 0.39337 * 0.995 / 0.0300249
StockK.1768  <- 101.8 * 0.52445 * 0.995 / 0.0300397
StockMg.979  <- 304.7 * 0.09479 * 1.014 / 0.0300828
StockCa.1349 <- 102.3 * 0.40043 * 0.990 / 0.0300715
StockLi.500u <- StockLi.622 * 0.6197 / 6.1725 * 0.4114 / 50.0378 * 1000
StockNa.20   <- StockNa.6627 * 0.1546 / 50.3288
StockK.10    <- StockK.1768 * 0.3235 / 50.0196
StockMg.2    <- StockMg.979 * 0.1182 / 51.2115
StockCa.10   <- StockCa.1349 * 0.3882 / 51.5038
#-----CALIBRATION CURVES AND MODELS------------------------------------------
CalCurves <- list(
Lithium1   = data.frame(Conc = c(0, 0.0572, 0.2463, 1.2093, 2.4374, 3.1012) * StockLi.500u /
c(6, 6.1763, 6.1816, 6.1501, 6.2182, 6.1090),
Signal = c(0, 0.008, 0.041, 0.209, 0.417, 0.537)),
LithiumSW1 = data.frame(Conc = c(0, 0.0709, 0.2340, 1.2107, 2.3974, 3.2936) * StockLi.500u /
c(6, 6.0722, 6.0480, 6.0575, 6.0114, 6.0348),
Signal = c(0, 0.010, 0.039, 0.210, 0.387, 0.598)),
Sodium1    = data.frame(Conc = c(0, 0.6103, 1.1981, 1.7972, 2.3932, 3.0180) * StockNa.20 /
c(6, 6.0091, 6.0703, 6.0552, 6.0101, 6.0426),
Signal  = c(0, 0.444, 0.680, 0.846, 0.969, 1.082)),
Potassium1 = data.frame(Conc = c(0, 0.1161, 0.3845, 0.7267, 0.9607, 1.2154) * StockK.10 /
c(6, 6.0537, 6.0643, 6.0318, 6.0002, 6.0493),
Signal = c(0, 0.133, 0.393, 0.692, 0.863, 0.932))
)
## for a cleaner workspace
#rm(list = ls()[grep("Stock", ls())])
#-----MODELOS DE LAS CURVAS--------------------------------------------------
CalModels <- list()
order = c(1, 1, 2, 2)
for (i in 1:4) CalModels[[i]] <- calibCurve(curve = CalCurves[[i]], order = order[i], plot = TRUE)
names(CalModels) <- names(CalCurves)
#-----TIEMPOS DE LA TOMA DE ALÍCUOTAS----------------------------------------
AliTimes <- c(0, 1, 3, 4.5, 4.51, 5.5, 7.5, 9)
#-----SEÑALES DE EMISIÓN DE LAS MUESTRAS-------------------------------------
AliEm <- list(
Feed.25.1.Li     = c(0.322, 0.222, 0.098, 0.081),
Feed.25.2.Li     = c(0.322, 0.230, 0.212, 0.205),
Strip.25.1.Li    = c(0.000, 0.107, 0.229, 0.276),
Strip.25.2.Li    = c(0.264, 0.402, 0.429, 0.433),
Strip.25.1.Li.SA = c(0.084, 0.191, 0.319, 0.345),
Strip.25.2.Li.SA = c(0.350, 0.469, 0.490, 0.499),
Feed.25.1.Na     = c(0.850, 0.849, 0.854, 0.856),
Feed.25.2.Na     = c(0.893, 0.881, 0.866, 0.839),
Strip.25.1.Na    = c(0.032, 0.470, 0.698, 0.748),
Strip.25.2.Na    = c(0.723, 0.558, 0.807, 0.932),
Feed.25.1.K      = c(0.376, 0.362, 0.365, 0.378),
Feed.25.2.K      = c(0.406, 0.514, 0.363, 0.365),
Strip.25.1.K     = c(0.050, 0.063, 0.140, 0.249),
Strip.25.2.K     = c(0.265, 0.099, 0.212, 0.291)
)
#-----DILUCIÓN DE LAS MUESTRAS PARA SODIO Y POTASIO--------------------------
AliDil <- list(
Feed.25.1.1_25  = c(811/20222, 813/20320, 813/20315, 812/20334)^(-1),
Feed.25.2.1_25  = c(820/20338, 820/20383, 820/20348, 818/20380)^(-1),
Strip.25.1.1_10 = c(787/8152, 788/8133, 793/8135, 792/8125)^(-1),
Strip.25.2.1_10 = c(792/8122, 798/8141, 794/8151, 793/8152)^(-1)
)
AliDil$Feed.25.1.1_K  <- AliDil$Feed.25.1.1_25 * c(0998/19869, 0983/20113, 1004/20053, 1007/20013)^(-1)
AliDil$Feed.25.2.1_K  <- AliDil$Feed.25.2.1_25 * c(1011/20051, 1010/19964, 1002/20041, 1008/19951)^(-1)
AliDil$Feed.25.1.1_Na <- AliDil$Feed.25.1.1_K * c(2208/10390, 2239/10329, 2253/10309, 2226/10290)^(-1)
AliDil$Feed.25.2.1_Na <- AliDil$Feed.25.2.1_K * c(2268/10381, 2255/10459, 2264/10389, 2109/10164)^(-1)
AliDil$Strip.25.1.1_K  <- AliDil$Strip.25.1.1_10
AliDil$Strip.25.2.1_K  <- AliDil$Strip.25.2.1_10 * c(1, 1835/14845, 1767/14672, 1774/14667)^(-1)
AliDil$Strip.25.1.1_Na <- AliDil$Strip.25.1.1_10 * c(2206/10276, 2063/10389, 1937/10045, 1774/11339)^(-1)
AliDil$Strip.25.2.1_Na <- AliDil$Strip.25.2.1_10 * c(1758/12219, 0989/20056, 0991/19907, 0992/19976)^(-1)
************************************************************************************************
************************************************
******************************************
********************************
#-----CONCENTRACIÓN DE ESPECIES EN LAS ALÍCUOTAS-----------------------------
AliConc <- vector(mode = "list")
rep(1, 4)
library(transmem)
library(ggplot2)
PDF <- FALSE
if (PDF) pdf("SWS-29-01-19.pdf", height = 7/1.3, width = 9/1.3)
n = 2
#-----STOCK SOLUTIONS--Prepared January 18th, 2020---------------------------
StockLi.622  <- 100.4 * 0.18787 * 0.990 / 0.0300314
StockNa.6627 <- 508.4 * 0.39337 * 0.995 / 0.0300249
StockK.1768  <- 101.8 * 0.52445 * 0.995 / 0.0300397
StockMg.979  <- 304.7 * 0.09479 * 1.014 / 0.0300828
StockCa.1349 <- 102.3 * 0.40043 * 0.990 / 0.0300715
StockLi.500u <- StockLi.622 * 0.6197 / 6.1725 * 0.4114 / 50.0378 * 1000
StockNa.20   <- StockNa.6627 * 0.1546 / 50.3288
StockK.10    <- StockK.1768 * 0.3235 / 50.0196
StockMg.2    <- StockMg.979 * 0.1182 / 51.2115
StockCa.10   <- StockCa.1349 * 0.3882 / 51.5038
#-----CALIBRATION CURVES AND MODELS------------------------------------------
CalCurves <- list(
Lithium1   = data.frame(Conc = c(0, 0.0572, 0.2463, 1.2093, 2.4374, 3.1012) * StockLi.500u /
c(6, 6.1763, 6.1816, 6.1501, 6.2182, 6.1090),
Signal = c(0, 0.008, 0.041, 0.209, 0.417, 0.537)),
LithiumSW1 = data.frame(Conc = c(0, 0.0709, 0.2340, 1.2107, 2.3974, 3.2936) * StockLi.500u /
c(6, 6.0722, 6.0480, 6.0575, 6.0114, 6.0348),
Signal = c(0, 0.010, 0.039, 0.210, 0.387, 0.598)),
Sodium1    = data.frame(Conc = c(0, 0.6103, 1.1981, 1.7972, 2.3932, 3.0180) * StockNa.20 /
c(6, 6.0091, 6.0703, 6.0552, 6.0101, 6.0426),
Signal  = c(0, 0.444, 0.680, 0.846, 0.969, 1.082)),
Potassium1 = data.frame(Conc = c(0, 0.1161, 0.3845, 0.7267, 0.9607, 1.2154) * StockK.10 /
c(6, 6.0537, 6.0643, 6.0318, 6.0002, 6.0493),
Signal = c(0, 0.133, 0.393, 0.692, 0.863, 0.932))
)
## for a cleaner workspace
#rm(list = ls()[grep("Stock", ls())])
#-----MODELOS DE LAS CURVAS--------------------------------------------------
CalModels <- list()
order = c(1, 1, 2, 2)
for (i in 1:4) CalModels[[i]] <- calibCurve(curve = CalCurves[[i]], order = order[i], plot = TRUE)
names(CalModels) <- names(CalCurves)
#-----TIEMPOS DE LA TOMA DE ALÍCUOTAS----------------------------------------
AliTimes <- c(0, 1, 3, 4.5, 4.51, 5.5, 7.5, 9)
#-----SEÑALES DE EMISIÓN DE LAS MUESTRAS-------------------------------------
AliEm <- list(
Feed.25.1.Li     = c(0.322, 0.222, 0.098, 0.081),
Feed.25.2.Li     = c(0.322, 0.230, 0.212, 0.205),
Strip.25.1.Li    = c(0.000, 0.107, 0.229, 0.276),
Strip.25.2.Li    = c(0.264, 0.402, 0.429, 0.433),
Strip.25.1.Li.SA = c(0.084, 0.191, 0.319, 0.345),
Strip.25.2.Li.SA = c(0.350, 0.469, 0.490, 0.499),
Feed.25.1.Na     = c(0.850, 0.849, 0.854, 0.856),
Feed.25.2.Na     = c(0.893, 0.881, 0.866, 0.839),
Strip.25.1.Na    = c(0.032, 0.470, 0.698, 0.748),
Strip.25.2.Na    = c(0.723, 0.558, 0.807, 0.932),
Feed.25.1.K      = c(0.376, 0.362, 0.365, 0.378),
Feed.25.2.K      = c(0.406, 0.514, 0.363, 0.365),
Strip.25.1.K     = c(0.050, 0.063, 0.140, 0.249),
Strip.25.2.K     = c(0.265, 0.099, 0.212, 0.291)
)
#-----DILUCIÓN DE LAS MUESTRAS PARA SODIO Y POTASIO--------------------------
AliDil <- list(
Feed.25.1.1_25  = c(811/20222, 813/20320, 813/20315, 812/20334)^(-1),
Feed.25.2.1_25  = c(820/20338, 820/20383, 820/20348, 818/20380)^(-1),
Strip.25.1.1_10 = c(787/8152, 788/8133, 793/8135, 792/8125)^(-1),
Strip.25.2.1_10 = c(792/8122, 798/8141, 794/8151, 793/8152)^(-1)
)
AliDil$Feed.25.1.1_K  <- AliDil$Feed.25.1.1_25 * c(0998/19869, 0983/20113, 1004/20053, 1007/20013)^(-1)
AliDil$Feed.25.2.1_K  <- AliDil$Feed.25.2.1_25 * c(1011/20051, 1010/19964, 1002/20041, 1008/19951)^(-1)
AliDil$Feed.25.1.1_Na <- AliDil$Feed.25.1.1_K * c(2208/10390, 2239/10329, 2253/10309, 2226/10290)^(-1)
AliDil$Feed.25.2.1_Na <- AliDil$Feed.25.2.1_K * c(2268/10381, 2255/10459, 2264/10389, 2109/10164)^(-1)
AliDil$Strip.25.1.1_K  <- AliDil$Strip.25.1.1_10
AliDil$Strip.25.2.1_K  <- AliDil$Strip.25.2.1_10 * c(1, 1835/14845, 1767/14672, 1774/14667)^(-1)
AliDil$Strip.25.1.1_Na <- AliDil$Strip.25.1.1_10 * c(2206/10276, 2063/10389, 1937/10045, 1774/11339)^(-1)
AliDil$Strip.25.2.1_Na <- AliDil$Strip.25.2.1_10 * c(1758/12219, 0989/20056, 0991/19907, 0992/19976)^(-1)
#-----CONCENTRACIÓN DE ESPECIES EN LAS ALÍCUOTAS-----------------------------
AliConc <- vector(mode = "list")
names(AliConc) <- names(AliAbs)
for (i in 1:n) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$LithiumSW1)
#-----CONCENTRACIÓN POR ADICION ESTÁNDAR DE UN SOLO PUNTO--------------------
AliDilLi <- list(Strip.25.1 = rep(1, 4), Strip.25.2 = rep(1, 4),
Strip.25.3 = c(), Strip.25.3 = c())
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 498),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 564))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+4]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
names(AliConc) <- names(AliEm)
#-----CONCENTRACIÓN DE ESPECIES EN LAS ALÍCUOTAS-----------------------------
AliConc <- vector(mode = "list", length = length(AliEm))
names(AliConc) <- names(AliEm)
for (i in 1:n) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$LithiumSW1)
#-----CONCENTRACIÓN POR ADICION ESTÁNDAR DE UN SOLO PUNTO--------------------
AliDilLi <- list(Strip.25.1 = rep(1, 4), Strip.25.2 = rep(1, 4),
Strip.25.3 = c(), Strip.25.3 = c())
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 498),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 564))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+4]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
i
AliConc[[i+n]]
AliEm[[i+n]]
SpikeMass[[i]]
AliEm[[i+(2*n)]]
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
#-----SEÑALES DE EMISIÓN DE LAS MUESTRAS-------------------------------------
AliEm <- list(
Feed.25.1.Li     = c(0.322, 0.222, 0.098, 0.081),
Feed.25.2.Li     = c(0.322, 0.230, 0.212, 0.205),
Strip.25.1.Li    = c(0.000, 0.107, 0.229, 0.276),
Strip.25.2.Li    = c(0.264, 0.402, 0.429, 0.433),
Strip.25.1.Li.SA = c(0.084, 0.191, 0.319, 0.345),
Strip.25.2.Li.SA = c(0.340, 0.469, 0.490, 0.499),
Feed.25.1.Na     = c(0.850, 0.849, 0.854, 0.856),
Feed.25.2.Na     = c(0.893, 0.881, 0.866, 0.839),
Strip.25.1.Na    = c(0.032, 0.470, 0.698, 0.748),
Strip.25.2.Na    = c(0.723, 0.558, 0.807, 0.932),
Feed.25.1.K      = c(0.376, 0.362, 0.365, 0.378),
Feed.25.2.K      = c(0.406, 0.514, 0.363, 0.365),
Strip.25.1.K     = c(0.050, 0.063, 0.140, 0.249),
Strip.25.2.K     = c(0.265, 0.099, 0.212, 0.291)
)
#-----DILUCIÓN DE LAS MUESTRAS PARA SODIO Y POTASIO--------------------------
AliDil <- list(
Feed.25.1.1_25  = c(811/20222, 813/20320, 813/20315, 812/20334)^(-1),
Feed.25.2.1_25  = c(820/20338, 820/20383, 820/20348, 818/20380)^(-1),
Strip.25.1.1_10 = c(787/8152, 788/8133, 793/8135, 792/8125)^(-1),
Strip.25.2.1_10 = c(792/8122, 798/8141, 794/8151, 793/8152)^(-1)
)
AliDil$Feed.25.1.1_K  <- AliDil$Feed.25.1.1_25 * c(0998/19869, 0983/20113, 1004/20053, 1007/20013)^(-1)
AliDil$Feed.25.2.1_K  <- AliDil$Feed.25.2.1_25 * c(1011/20051, 1010/19964, 1002/20041, 1008/19951)^(-1)
AliDil$Feed.25.1.1_Na <- AliDil$Feed.25.1.1_K * c(2208/10390, 2239/10329, 2253/10309, 2226/10290)^(-1)
AliDil$Feed.25.2.1_Na <- AliDil$Feed.25.2.1_K * c(2268/10381, 2255/10459, 2264/10389, 2109/10164)^(-1)
AliDil$Strip.25.1.1_K  <- AliDil$Strip.25.1.1_10
AliDil$Strip.25.2.1_K  <- AliDil$Strip.25.2.1_10 * c(1, 1835/14845, 1767/14672, 1774/14667)^(-1)
AliDil$Strip.25.1.1_Na <- AliDil$Strip.25.1.1_10 * c(2206/10276, 2063/10389, 1937/10045, 1774/11339)^(-1)
AliDil$Strip.25.2.1_Na <- AliDil$Strip.25.2.1_10 * c(1758/12219, 0989/20056, 0991/19907, 0992/19976)^(-1)
#-----CONCENTRACIÓN DE ESPECIES EN LAS ALÍCUOTAS-----------------------------
AliConc <- vector(mode = "list", length = length(AliEm))
names(AliConc) <- names(AliEm)
for (i in 1:n) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$LithiumSW1)
#-----CONCENTRACIÓN POR ADICION ESTÁNDAR DE UN SOLO PUNTO--------------------
AliDilLi <- list(Strip.25.1 = rep(1, 4), Strip.25.2 = rep(1, 4),
Strip.25.3 = c(), Strip.25.3 = c())
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 498),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 564))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
#-----SEÑALES DE EMISIÓN DE LAS MUESTRAS-------------------------------------
AliEm <- list(
Feed.25.1.Li     = c(0.322, 0.222, 0.098, 0.081),
Feed.25.2.Li     = c(0.322, 0.230, 0.212, 0.205),
Strip.25.1.Li    = c(0.000, 0.107, 0.229, 0.276),
Strip.25.2.Li    = c(0.264, 0.402, 0.429, 0.433),
Strip.25.1.Li.SA = c(0.084, 0.191, 0.319, 0.345),
Strip.25.2.Li.SA = c(0.334, 0.469, 0.490, 0.499),
Feed.25.1.Na     = c(0.850, 0.849, 0.854, 0.856),
Feed.25.2.Na     = c(0.893, 0.881, 0.866, 0.839),
Strip.25.1.Na    = c(0.032, 0.470, 0.698, 0.748),
Strip.25.2.Na    = c(0.723, 0.558, 0.807, 0.932),
Feed.25.1.K      = c(0.376, 0.362, 0.365, 0.378),
Feed.25.2.K      = c(0.406, 0.514, 0.363, 0.365),
Strip.25.1.K     = c(0.050, 0.063, 0.140, 0.249),
Strip.25.2.K     = c(0.265, 0.099, 0.212, 0.291)
)
#-----DILUCIÓN DE LAS MUESTRAS PARA SODIO Y POTASIO--------------------------
AliDil <- list(
Feed.25.1.1_25  = c(811/20222, 813/20320, 813/20315, 812/20334)^(-1),
Feed.25.2.1_25  = c(820/20338, 820/20383, 820/20348, 818/20380)^(-1),
Strip.25.1.1_10 = c(787/8152, 788/8133, 793/8135, 792/8125)^(-1),
Strip.25.2.1_10 = c(792/8122, 798/8141, 794/8151, 793/8152)^(-1)
)
AliDil$Feed.25.1.1_K  <- AliDil$Feed.25.1.1_25 * c(0998/19869, 0983/20113, 1004/20053, 1007/20013)^(-1)
AliDil$Feed.25.2.1_K  <- AliDil$Feed.25.2.1_25 * c(1011/20051, 1010/19964, 1002/20041, 1008/19951)^(-1)
AliDil$Feed.25.1.1_Na <- AliDil$Feed.25.1.1_K * c(2208/10390, 2239/10329, 2253/10309, 2226/10290)^(-1)
AliDil$Feed.25.2.1_Na <- AliDil$Feed.25.2.1_K * c(2268/10381, 2255/10459, 2264/10389, 2109/10164)^(-1)
AliDil$Strip.25.1.1_K  <- AliDil$Strip.25.1.1_10
AliDil$Strip.25.2.1_K  <- AliDil$Strip.25.2.1_10 * c(1, 1835/14845, 1767/14672, 1774/14667)^(-1)
AliDil$Strip.25.1.1_Na <- AliDil$Strip.25.1.1_10 * c(2206/10276, 2063/10389, 1937/10045, 1774/11339)^(-1)
AliDil$Strip.25.2.1_Na <- AliDil$Strip.25.2.1_10 * c(1758/12219, 0989/20056, 0991/19907, 0992/19976)^(-1)
#-----CONCENTRACIÓN DE ESPECIES EN LAS ALÍCUOTAS-----------------------------
AliConc <- vector(mode = "list", length = length(AliEm))
names(AliConc) <- names(AliEm)
for (i in 1:n) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$LithiumSW1)
#-----CONCENTRACIÓN POR ADICION ESTÁNDAR DE UN SOLO PUNTO--------------------
AliDilLi <- list(Strip.25.1 = rep(1, 4), Strip.25.2 = rep(1, 4),
Strip.25.3 = c(), Strip.25.3 = c())
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 498),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 564))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 498),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 574))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 498),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 584))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
AliConc
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 518),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 584))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 528),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 584))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc[[i+n]]
for (i in 1:n) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$LithiumSW1)
for (i in (3*n+1):(3*n+2)) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$Sodium1)
for (i in (4*n+1):(4*n+2)) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$Sodium1)
for (i in (5*n+1):(5*n+2)) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$Potassium1)
for (i in (6*n+1):(6*n+2)) AliConc[[i]] <- signal2conc(signal = AliEm[[i]], model = CalModels$Potassium1)
#-----CONCENTRACIÓN POR ADICION ESTÁNDAR DE UN SOLO PUNTO--------------------
AliDilLi <- list(Strip.25.1 = rep(1, 4), Strip.25.2 = rep(1, 4),
Strip.25.3 = c(), Strip.25.3 = c())
SpikeMass <- list(Strip.25.1 = c(493, 453, 540, 494),
Strip.25.2 = c(499, 498, 495, 528),
Strip.25.3 = c(567, 566, 566, 565),
Strip.25.4 = c(568, 567, 567, 584))
FinalMass <- list(Strip.25.1 = c(5691, 5646, 5755, 5690),
Strip.25.2 = c(5692, 5689, 5695, 5715),
Strip.25.3 = c(6507, 6572, 6582, 6627),
Strip.25.4 = c(6484, 6588, 6556, 6557))
for (i in 1:2) {
AliConc[[i+n]] <- ((AliEm[[i+n]] * StockLi.500u * (SpikeMass[[i]] / FinalMass[[i]])) /
(AliEm[[i+(2*n)]] - AliEm[[i+n]] * ((FinalMass[[i]] - SpikeMass[[i]]) / FinalMass[[i]]))) *
AliDilLi[[i]]
}
AliConc
