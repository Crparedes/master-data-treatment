velo1[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100, m = 5)
velo1[i, 2] <- mean(robust)
velo1[i, 3] <- sd(robust)
velo1[i, 4] <- median(robust)
velo1[i, 5] <- min(robust)
velo1[i, 6] <- max(robust)
}
velo1
velo1 -> velo
colMeans(velo[1:6, ])
###########################################
rep <- 1:6
files = c(paste0("C1V2L-", rep), paste0("C1V2R-", rep))
velo2 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel2/", files[i]), skip = 2, sep = ',')
rownames(velo2)[i] <- files[i]
velo2[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100, m = 5)
velo2[i, 2] <- mean(robust)
velo2[i, 3] <- sd(robust)
velo2[i, 4] <- median(robust)
velo2[i, 5] <- min(robust)
velo2[i, 6] <- max(robust)
}
###########################################
rep <- 1:6
files = c(paste0("C1V2L-", rep), paste0("C1V2R-", rep))
velo2 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel2/", files[i]), skip = 2, sep = ',')
rownames(velo2)[i] <- files[i]
velo2[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100, m = 5)
velo2[i, 2] <- mean(robust)
velo2[i, 3] <- sd(robust)
velo2[i, 4] <- median(robust)
velo2[i, 5] <- min(robust)
velo2[i, 6] <- max(robust)
}
velo2 -> velo
velo
colMeans(velo[1:6, ])
colMeans(velo[7:12, ])
###########################################
rep <- 1:7
files = c(paste0("C1V3L-", rep), paste0("C1V3R-", rep))
velo3 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel3/", files[i]), skip = 2, sep = ',')
rownames(velo3)[i] <- files[i]
velo3[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo3[i, 2] <- mean(robust)
velo3[i, 3] <- sd(robust)
velo3[i, 4] <- median(robust)
velo3[i, 5] <- min(robust)
velo3[i, 6] <- max(robust)
}
velo3 -> velo
velo
###########################################
rep <- 1:6
files = c(paste0("C1V3L-", rep), paste0("C1V3R-", rep))
velo3 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel3/", files[i]), skip = 2, sep = ',')
rownames(velo3)[i] <- files[i]
velo3[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo3[i, 2] <- mean(robust)
velo3[i, 3] <- sd(robust)
velo3[i, 4] <- median(robust)
velo3[i, 5] <- min(robust)
velo3[i, 6] <- max(robust)
}
velo3 -> velo
velo
colMeans(velo[1:6, ])
colMeans(velo[7:12, ])
###########################################
rep <- 1:7
files = c(paste0("C1V4L-", rep), paste0("C1V4R-", rep))
velo4 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel4/", files[i]), skip = 2, sep = ',')
rownames(velo4)[i] <- files[i]
velo4[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo4[i, 2] <- mean(robust)
velo4[i, 3] <- sd(robust)
velo4[i, 4] <- median(robust)
velo4[i, 5] <- min(robust)
velo4[i, 6] <- max(robust)
}
velo4 -> velo
velo
###########################################
rep <- 1:6
files = c(paste0("C1V4L-", rep), paste0("C1V4R-", rep))
velo4 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel4/", files[i]), skip = 2, sep = ',')
rownames(velo4)[i] <- files[i]
velo4[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo4[i, 2] <- mean(robust)
velo4[i, 3] <- sd(robust)
velo4[i, 4] <- median(robust)
velo4[i, 5] <- min(robust)
velo4[i, 6] <- max(robust)
}
velo4 -> velo
velo
colMeans(velo[1:6, ])
colMeans(velo[7:12, ])
###########################################
rep <- 1:6
files = c(paste0("C1V5L-", rep), paste0("C1V5R-", rep))
velo5 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel5/", files[i]), skip = 2, sep = ',')
rownames(velo5)[i] <- files[i]
velo5[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo5[i, 2] <- mean(robust)
velo5[i, 3] <- sd(robust)
velo5[i, 4] <- median(robust)
velo5[i, 5] <- min(robust)
velo5[i, 6] <- max(robust)
}
velo5 -> velo
velo
colMeans(velo[1:6, ])
colMeans(velo[7:12, ])
###########################################
rep <- 1:6
files = c(paste0("C1V6L-", rep), paste0("C1V6R-", rep))
velo6 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel6/", files[i]), skip = 2, sep = ',')
rownames(velo6)[i] <- files[i]
velo6[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo6[i, 2] <- mean(robust)
velo6[i, 3] <- sd(robust)
velo6[i, 4] <- median(robust)
velo6[i, 5] <- min(robust)
velo6[i, 6] <- max(robust)
}
velo6 -> velo
velo
###########################################
rep <- 1:6
files = c(paste0("C1V6L-", rep), paste0("C1V6R-", rep))
velo6 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
par(mfrow = c(length(rep), 2), mar=c(1.5, 0.5, 2, 0.2), oma = c(4, 4, 0.2, 0.2))
for (i in 1:length(files)) {
data <- read.table(file = paste0("Vel6/", files[i]), skip = 2, sep = ',')
rownames(velo6)[i] <- files[i]
velo6[i, 1] <- RPM(data$V4, n = 200, m = 3, plot = TRUE, name = files[i])
robust <- RobustRPM(data$V4, frac = 7, n = 100)
velo6[i, 2] <- mean(robust)
velo6[i, 3] <- sd(robust)
velo6[i, 4] <- median(robust)
velo6[i, 5] <- min(robust)
velo6[i, 6] <- max(robust)
}
velo6 -> velo
velo
colMeans(velo[1:6, ])
colMeans(velo[7:12, ])
velo1 -> velo
velo
colMeans(velo[1:6, ])
colMeans(velo[7:12, ])
colMeans(velo[1:6, ])
apply(velo[1:6, ], 2, sd)
colMeans(velo[7:12, ])
apply(velo[1:6, ], 2, sd)
velo2 -> velo
velo
colMeans(velo[1:6, ])
apply(velo[1:6, ], 2, sd)
colMeans(velo[7:12, ])
apply(velo[1:6, ], 2, sd)
velo3 -> velo
velo
colMeans(velo[1:6, ])
apply(velo[1:6, ], 2, sd)
colMeans(velo[7:12, ])
apply(velo[1:6, ], 2, sd)
velo4 -> velo
velo
colMeans(velo[1:6, ])
apply(velo[1:6, ], 2, sd)
colMeans(velo[7:12, ])
apply(velo[1:6, ], 2, sd)
velo5 -> velo
velo
colMeans(velo[1:6, ])
apply(velo[1:6, ], 2, sd)
colMeans(velo[7:12, ])
apply(velo[1:6, ], 2, sd)
velo6 -> velo
velo
colMeans(velo[1:6, ])
apply(velo[1:6, ], 2, sd)
colMeans(velo[7:12, ])
apply(velo[1:6, ], 2, sd)
source('~/Dropbox/0-UNAM/0-Polymeric Inclusion Membranes/Datos_Tratamiento/Trckr/24-Junio/readPlotResult.R', echo=TRUE)
mhclEst
StockLi.1 <- 129.5 * 0.187872 * 0.99 / 0.1200962
# 23 de abril de 2019
NaCl <- 1.1693 * 0.9960 * 0.393372 * 1000 / 0.0415065 #mg / kg
## RelaciÃ³n molar 1:10 Li:Na cuando [Li]=2mg/kg
2 / 6.941 * 10 * 0.085 * 22.99 / NaCl * 1000 #gramos de NaCl ~ 10000
# 30 de mayo de 2019
mhclEst <- c(58.0444-53.7721, 57.0970-53.5791, 55.7937-53.1808)
mna2co3 <- c(29.1560-28.6519, 29.1934-28.7770, 29.1803-28.8700)
HCl <- mean(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
sd(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
mHClTit <- c(48.3155-47.6075, 47.5234-46.5982)
mNH3    <- c(33.5707-29.4377, 34.2801-29.1123)
mean(HCl*mHClTit/mNH3)
sd(HCl*mHClTit/mNH3)
# 06 de Junio de 2019
mhclEst <- c(mhclEst, 126.4040-120.6425)
mna2co3 <- c(mna2co3, 77.6072-76.9436)
HCl <- mean(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
sd(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
mHClTit <- c(141.4053-140.0824, 137.9705-136.6486)
mNH3    <- c(102.0471-97.0778, 99.3697-94.4215)
mean(HCl*mHClTit/mNH3)
sd(HCl*mHClTit/mNH3)
85 * 2 / StockLi.1
# 06 de Junio de 2019
mhclEst <- c(126.4040-120.6425)
mna2co3 <- c(77.6072-76.9436)
HCl <- mean(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
sd(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
mHClTit <- c(141.4053-140.0824, 137.9705-136.6486)
# 06 de Junio de 2019
mhclEst <- c(154.2371-147.4850, 157.6000-149.4853, 153.0958-147.9979)
mna2co3 <- c(97.4432-96.6690, 96.4608-95.5335, 94.9407-94.4234)
HCl <- mean(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
HCl
mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888)
# 06 de Junio de 2019
mhclEst <- c(154.2371-147.4850, 157.6000-149.4853)
mna2co3 <- c(97.4432-96.6690, 96.4608-95.5335)
HCl <- mean(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
sd(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
HCl
mHClTit <- c(118.6998-117.5092, 135.5453-134.3304, 139.0883-137.8779)
mNH3    <- c(81.9034-76.9455, 99.1843-94.1931, 102.0632-97.0800)
HCl*mHClTit/mNH3
mean(HCl*mHClTit/mNH3)
sd(HCl*mHClTit/mNH3)
(HCl <- mean(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888)))
sd(mna2co3 / 0.1059888*2/(mhclEst+mna2co3*44.01/105.9888))
mean(HCl*mHClTit/mNH3)
sd(HCl*mHClTit/mNH3)
StockLi.1
2*85/200.557
85*0.01/0.499
0.07*85/2.062
Parameters
round(Parameters, 3)
sF
roud(sF, 1)
round(sF, 1)
Des
round(Des, 3)
#IAPlot(Des.Resp3)
#MEPlot(Des.Resp3)
plot(Des.Resp3)
#IAPlot(Des.RespD)
#MEPlot(Des.RespD)
plot(Des.RespD)
#IAPlot(Des.Resp2)
#MEPlot(Des.Resp2)
plot(Des.Resp2)
#IAPlot(Des.Resp1)
#MEPlot(Des.Resp1)
plot(Des.Resp1)
#IAPlot(Des.Resp1)
#MEPlot(Des.Resp1)
plot(Des.Resp1)
#halfnormal(Des.Resp1)
anova(lm(Parameters.alpha ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.Resp1))
#halfnormal(Des.Resp2)
anova(lm(Parameters.beta ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.Resp2))
#IAPlot(Des.Resp2)
#MEPlot(Des.Resp2)
plot(Des.Resp2)
#halfnormal(Des.Resp3)
anova(lm(sF ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.Resp3))
anova(lm(Des ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.RespD))
halfnormal(Des.RespD)
halfnormal(Des.RespD)
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
#halfnormal(Des.Resp1)
anova(lm(Parameters.alpha ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.Resp1))
halfnormal(Des.Resp1)
#IAPlot(Des.Resp1)
#MEPlot(Des.Resp1)
plot(Des.Resp1)
halfnormal(Des.RespD)
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
halfnormal(Des.RespD)
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
setwd("~/Dropbox/0-UNAM/0-Polymeric Inclusion Membranes/Datos_Tratamiento")
halfnormal(Des.RespD)
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
abline(y ~ 0.1x)
abline(y ~ 0.1*x)
halfnormal(Des.RespD)
abline(y ~ 0.1*x)
halfnormal(Des.RespD)
halfnormal(Des.Resp1)
pdf("Halfnormal19-06-12.pdf", height = 7/1.8, width = 9/1.8)
halfnormal(Des.RespD)
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
dev.off
dev.off()
pdf("Halfnormal19-06-12.pdf", height = 7, width = 7
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
dev.off()
halfnormal(Des.RespD, main = FALSE)
halfnormal(Des.RespD, main = '')
pdf("Halfnormal19-06-12.pdf", height = 7, width = 7)
halfnormal(Des.RespD, main = '')
halfnormal(Des.Resp1)
halfnormal(Des.Resp2)
halfnormal(Des.Resp3)
dev.off()
pdf("Halfnormal19-06-12.pdf", height = 7, width = 7)
halfnormal(Des.RespD, main = '')
halfnormal(Des.Resp1, main = '')
halfnormal(Des.Resp2, main = '')
halfnormal(Des.Resp3, main = '')
dev.off()
pdf("Halfnormal19-06-12.pdf", height = 7/3, width = 7/3)
halfnormal(Des.RespD, main = '')
halfnormal(Des.Resp1, main = '')
halfnormal(Des.Resp2, main = '')
halfnormal(Des.Resp3, main = '')
dev.off()
pdf("Halfnormal19-06-12.pdf", height = 7/2, width = 7/2)
halfnormal(Des.RespD, main = '')
halfnormal(Des.Resp1, main = '')
halfnormal(Des.Resp2, main = '')
halfnormal(Des.Resp3, main = '')
dev.off()
halfnormal(Des.RespD, main = '', labs = 'A')
halfnormal(Des.Resp1, main = '', labs = 'A')
halfnormal(Des.RespD, main = '', code = TRUE)
halfnormal(Des.Resp1, main = '', code = TRUE)
pdf("Halfnormal19-06-12.pdf", height = 7/2, width = 7/2)
halfnormal(Des.RespD, main = '', code = TRUE)
halfnormal(Des.Resp1, main = '', code = TRUE)
halfnormal(Des.Resp2, main = '', code = TRUE)
halfnormal(Des.Resp3, main = '', code = TRUE)
dev.off()
#IAPlot(Des.Resp1)
#MEPlot(Des.Resp1)
plot(Des.Resp1)
#halfnormal(Des.Resp1)
anova(lm(Parameters.alpha ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.Resp1))
#halfnormal(Des.Resp2)
anova(lm(Parameters.beta ~ CTA + Extr + molRat + NH4OH_f + HCl_s, data = Des.Resp2))
#IAPlot(Des.Resp2)
#MEPlot(Des.Resp2)
plot(Des.Resp2)
i = 1
files = c(paste0("C1V1L-", rep), paste0("C1V1R-", rep))
setwd("~/Dropbox/0-UNAM/0-Polymeric Inclusion Membranes/Datos_Tratamiento/Trckr/24-Junio")
find_peaks <- function (x, m = 3) {
shape <- diff(sign(diff(x, na.pad = FALSE)))
pks <- sapply(which(shape < 0), FUN = function(i) {
z <- i - m + 1
z <- ifelse(z > 0, z, 1)
w <- i + m + 1
w <- ifelse(w < length(x), w, length(x))
if(all(x[c(z : i, (i + 2) : w)] <= x[i + 1])) return(i + 1) else return(numeric(0))
})
pks <- unlist(pks)
pks
}
RPM <- function (lum, fps = 240, m = 3, n = 50, plot = FALSE, name = NULL) {
peaks <- find_peaks(x = lum, m = m)
if (plot) {
if (missing(name)) {
plot(lum, xlim = c(1, n), type = 'o')
} else {
plot(lum, xlim = c(1, n), type = 'o', main = name)
}
points(x = peaks, y = lum[peaks], col = 2, pch = 8)
}
rev = length(peaks) / 2
time = length(lum) / 240 / 60
return(rev / time)
}
RobustRPM <- function (lum, frac = 10, fps = 240, n = 50, m = 3, plot = FALSE) {
ngr <- trunc(length(lum) / frac)
values <- vector()
for (i in 1:frac) {
values <- c(values, RPM(lum = lum[((i - 1) * ngr + 1):(i * ngr)],
fps = fps, n = n, m = m, plot = plot))
}
return(values)
}
###########################################
rep <- 1:6
files = c(paste0("C1V1L-", rep), paste0("C1V1R-", rep))
velo1 = matrix(ncol = 12, nrow = length(files), dimnames = list(1:length(files)))
data <- read.table(file = paste0("Vel1/", files[i]), skip = 2, sep = ',')
velo1[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
RPM <- function (lum, fps = 240, m = 3, n = 50, plot = FALSE, name = NULL) {
peaks <- find_peaks(x = lum, m = m)
if (plot) {
if (missing(name)) {
plot(lum, xlim = c(1, n), type = 'o', xlab = 'Fotograma', ylab = 'Luminancia (lumas)')
} else {
plot(lum, xlim = c(1, n), type = 'o', main = name)
}
points(x = peaks, y = lum[peaks], col = 2, pch = 8)
}
rev = length(peaks) / 2
time = length(lum) / 240 / 60
return(rev / time)
}
velo1[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
i = 2
RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
data <- read.table(file = paste0("Vel1/", files[i]), skip = 2, sep = ',')
rownames(velo1)[i] <- files[i]
velo1[i, 1] <- RPM(data$V4, n = 200, m = 5, plot = TRUE, name = files[i])
RPM(data$V4, n = 100, m = 5, plot = TRUE, name = files[i])
RPM <- function (lum, fps = 240, m = 3, n = 50, plot = FALSE, name = NULL) {
peaks <- find_peaks(x = lum, m = m)
if (plot) {
if (missing(name)) {
plot(lum, xlim = c(1, n), type = 'o', xlab = 'Fotograma', ylab = 'Luminancia (lumas)')
} else {
plot(lum, xlim = c(1, n), type = 'o', main = name, xlab = 'Fotograma', ylab = 'Luminancia (lumas)')
}
points(x = peaks, y = lum[peaks], col = 2, pch = 8)
}
rev = length(peaks) / 2
time = length(lum) / 240 / 60
return(rev / time)
}
RPM(data$V4, n = 100, m = 5, plot = TRUE, name = files[i])
data1 <- read.table(file = paste0("Vel2/", files[i]), skip = 2, sep = ',')
data1 <- read.table(file = paste0("Vel2/", files[i]), skip = 2, sep = ',')
data1 <- read.table(file = paste0("Vel1/", files[i]), skip = 2, sep = ',')
velo1
source('~/Dropbox/0-UNAM/0-Polymeric Inclusion Membranes/Datos_Tratamiento/Trckr/24-Junio/readPlotResult.R', echo=TRUE)
velo1
data <- read.table(file = "Vel1/C1V1R-5", skip = 2, sep = ',')
RPM(data$V4, n = 100, m = 5, plot = TRUE)
RPM(data$V4, n = 150, m = 5, plot = TRUE)
velo6
data <- read.table(file = "Vel6/C1V6R-6", skip = 2, sep = ',')
RPM(data$V4, n = 150, m = 5, plot = TRUE)
RPM(data$V4, n = 150, m = 3, plot = TRUE)
data <- read.table(file = "Vel1/C1V1R-5", skip = 2, sep = ',')
RPM(data$V4, n = 100, m = 5, plot = TRUE)
data <- read.table(file = "Vel6/C1V6R-6", skip = 2, sep = ',')
RPM(data$V4, n = 100, m = 3, plot = TRUE)
data <- read.table(file = "Vel1/C1V1R-5", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 5, plot = TRUE)
data <- read.table(file = "Vel6/C1V6R-6", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 3, plot = TRUE)
data <- read.table(file = "Vel6/C1V6L-4", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 3, plot = TRUE)
pdf("Tracker.pdf", height = 4, width = 4)
data <- read.table(file = "Vel1/C1V1R-5", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 5, plot = TRUE)
data <- read.table(file = "Vel6/C1V6L-4", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 3, plot = TRUE)
dev.off()
pdf("Tracker.pdf", height = 5, width = 5)
data <- read.table(file = "Vel1/C1V1R-5", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 5, plot = TRUE)
data <- read.table(file = "Vel6/C1V6L-4", skip = 2, sep = ',')
RPM(data$V4, n = 50, m = 3, plot = TRUE)
dev.off()
